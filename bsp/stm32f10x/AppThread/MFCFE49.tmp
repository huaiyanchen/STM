/*
 * Copyright (c) 2006-2018, RT-Thread Development Team
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Change Logs:
 * Date           Author       Notes
 * 2009-01-05     Bernard      the first version
 */

#ifndef __TD_MAIN_H__
#define __TD_MAIN_H__

#include <rtthread.h>
#include <stm32f10x.h>
#include "userCommon.h"

#include "key.h"
#include "TM1640.h"
#include "playSound.h"
#include "dev_voice.h"
#include "dev_flash.h"

#define APP_SOCKET_NUM		10
#define APP_RULE_CHARGE_MODE	APP_RULE_MODE_TIME
#define APP_RULE_MODE_TIME	0x01
#define APP_RULE_MODE_VOL	0x02

typedef struct
{
	rt_bool_t reqFlg;	//request flg
	rt_bool_t stFlg;	//start flg
	rt_uint8_t area;	//request app area
	rt_uint32_t offset;	//request data offset
	rt_uint16_t reqLen;	//request data length
	rt_uint8_t stt; 	//0x01: continue, 0x02: finish, 0x03: err
}APP_DEV_OTA;

typedef struct
{
	rt_uint8_t socketSum;	
	rt_uint8_t orderId[APP_SOCKET_NUM][6];
	rt_uint8_t socketStt[APP_SOCKET_NUM];
	rt_uint8_t chargeType[APP_SOCKET_NUM];
	rt_uint8_t addTimes[APP_SOCKET_NUM];
	
	rt_uint8_t autoStopInfo[APP_SOCKET_NUM];
	
	float runTime[APP_SOCKET_NUM]; 	//time
	float restTime[APP_SOCKET_NUM];
	float runVol[APP_SOCKET_NUM];	//vol
	float restVol[APP_SOCKET_NUM];
	float runCash[APP_SOCKET_NUM];	//cash
	float restCash[APP_SOCKET_NUM];
	
	float currA[APP_SOCKET_NUM];
	float currV[APP_SOCKET_NUM];
	rt_uint16_t currW[APP_SOCKET_NUM];
	rt_uint16_t avgW[APP_SOCKET_NUM];
	rt_uint16_t maxW[APP_SOCKET_NUM];
}APP_DEV_STT;

typedef struct
{
	rt_uint8_t setFlg;
	
	rt_uint8_t fullPower;
	rt_uint8_t fullTime;
	rt_uint8_t minCalcUnit;
	rt_uint8_t chargeMode;
	rt_uint16_t prePayment;
	rt_uint16_t powerLev1;
	rt_uint16_t paramLev1;
	rt_uint16_t powerLev2;
	rt_uint16_t paramLev2;
	rt_uint16_t powerLev3;
	rt_uint16_t paramLev3;
	rt_uint16_t powerLev4;
	rt_uint16_t paramLev4;
}APP_DEV_RULE;

typedef struct
{
	rt_uint8_t reqFlg[APP_SOCKET_NUM];
	rt_uint8_t evenType[APP_SOCKET_NUM]; //0x00: stop, 0x01: start
	
	rt_uint32_t id[APP_SOCKET_NUM];
	rt_uint8_t type[APP_SOCKET_NUM];	//0x01: online card, 0x02: offline card
	rt_uint32_t money[APP_SOCKET_NUM];
}APP_CARD;

typedef struct
{
	rt_uint8_t reqFlg[APP_SOCKET_NUM];
	rt_uint8_t evenType[APP_SOCKET_NUM]; //0x02: add, 0x01: start
}APP_COIN;

typedef struct
{
	APP_DEV_STT stt;
	APP_CARD card;
	APP_COIN coin;
	APP_DEV_RULE rule;
	APP_DEV_OTA ota;
}APP_DEV_INFO;

typedef struct
{
	rt_uint32_t  tick;

	APP_DEV_INFO dev;
	
	void (*init)();
	void (*deal)(); 
}TD_MAIN;

#define NEW_TD_MAIN  {0,\
	{0},\
    (void (*)(rt_uint32_t))td_main_init,\
    (void (*)(rt_uint32_t))td_main_deal\
}

extern TD_MAIN _td_main;

void td_main_init(TD_MAIN *p);
void td_main_deal(TD_MAIN *p);

void deal_keyPress();
void led_motion(TD_MAIN *p);

#endif
